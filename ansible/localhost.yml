- hosts: localhost
  connection: local
  gather_facts: no
  become: no
  vars:
    homebrew_taps:
      - homebrew/cask
      - soracom/soracom-cli
      - ktr0731/evans
    homebrew_packages:
      - { name: openssl }
      - { name: openssl, state: linked, install_options: force }
      - { name: python }
      - { name: ansible }
      - { name: git }
      - { name: zsh, install_options: disable-etcdir }
      - { name: wget }
      - { name: curl }
      - { name: cmake }
      - { name: autoconf }
      - { name: automake }
      - { name: tree }
      - { name: nkf }
      - { name: tig }
      - { name: rbenv }
      - { name: ruby-build }
      - { name: mysql }
      - { name: sqlite }
      - { name: boost }
      - { name: erlang }
      - { name: elixir }
      - { name: gcc }
      - { name: imagemagick }
      - { name: libjpeg }
      - { name: libpng }
      - { name: libtiff }
      - { name: libtool }
      - { name: opencv }
      - { name: pkg-config }
      - { name: postgresql }
      - { name: qt5 }
      - { name: readline }
      - { name: sl }
      - { name: tbb }
      - { name: xz }
      - { name: lua }
      - { name: vim, install_options: with-lua }
      - { name: git-cal }
      - { name: peco }
      - { name: httperf }
      - { name: autobench }
      - { name: node }
      - { name: nodenv }
      - { name: redis }
      - { name: pyenv }
      - { name: pyenv-virtualenv }
      - { name: heroku-toolbelt }
      - { name: thefuck }
      - { name: go }
      - { name: carthage }
      - { name: shared-mime-info }
      - { name: ctags }
      - { name: the_silver_searcher }
      - { name: hub }
      - { name: jq }
      - { name: swiftlint }
      - { name: kylef/formulae/swiftenv }
      - { name: sbt }
      - { name: awscli }
      - { name: yarn }
      - { name: soracom-cli }
      - { name: dep }
      - { name: kubernetes-helm }
      - { name: presto }
      - { name: ghq }
      - { name: protobuf }
      - { name: evans }

    homebrew_cask_packages:
      - { name: iterm2 }
      - { name: google-chrome }
      - { name: chrome-remote-desktop-host }
      - { name: google-japanese-ime }
      - { name: java }
      - { name: skype }
      - { name: slack }
      - { name: karabiner-elements }
      - { name: dash }
      - { name: skitch }
      - { name: sketch }
      - { name: atom }
      - { name: virtualbox }
      - { name: mactex }
      - { name: dropbox }
      - { name: evernote }
      - { name: bettertouchtool }
      - { name: microsoft-office }
      - { name: xquartz }
      - { name: inkscape }
      - { name: appcleaner }
      - { name: github-desktop }
      - { name: lyrics-master }
      - { name: sequel-pro }
      - { name: cyberduck }
      - { name: wireshark }
      - { name: vlc }
      - { name: skim }
      - { name: gimp }
      - { name: intel-power-gadget }
      - { name: racket }
      - { name: astah-professional }
      - { name: docker }
      - { name: discord }
      - { name: hyperswitch }
      - { name: google-cloud-sdk }

    mac_defaults_settings:
      - {
        domain: NSGlobalDomain,
        key: AppleShowAllExtensions,
        type: bool,
        value: true,
      }
      - {
        domain: com.apple.AppleMultitouchTrackpad,
        key: Clicking,
        type: int,
        value: 1,
      }
      - {
        domain: com.apple.AppleMultitouchTrackpad,
        key: TrackpadFourFingerHorizSwipeGesture,
        type: int,
        value: 2,
      }
      - {
        domain: com.apple.driver.AppleBluetoothMultitouch.trackpad,
        key: TrackpadFourFingerHorizSwipeGesture,
        type: int,
        value: 2,
      }
      - {
        domain: com.apple.dock,
        key: mru-spaces,
        type: bool,
        value: false,
      }
      - {
        domain: com.apple.dock,
        key: wvous-bl-corner,
        type: int,
        value: 13,
      }
      - {
        domain: com.apple.dock,
        key: wvous-br-corner,
        type: int,
        value: 4,
      }
      - {
        domain: com.apple.finder,
        key: AppleShowAllFiles,
        type: bool,
        value: true,
      }

    mac_global_domain_defaults_settings:
      - {
        key: com.apple.keyboard.fnState,
        type: bool,
        value: true,
      }
      - {
        key: InitialKeyRepeat,
        type: int,
        value: 15,
      }
      - {
        key: KeyRepeat,
        type: int,
        value: 2,
      }
      - {
        key: NSAutomaticCapitalizationEnabled,
        type: bool,
        value: false,
      }
      - {
        key: NSAutomaticSpellingCorrectionEnabled,
        type: bool,
        value: false,
      }

  tasks:
    - name: add tap repositories of homebrew
      homebrew_tap: tap={{ item }} state=present
      with_items: "{{ homebrew_taps }}"

    - name: update homebrew
      homebrew: update_homebrew=yes

    # brew cask
    - name: install homebrew-cask
      homebrew: name=cask state=latest
    - name: install cask packages
      homebrew_cask: name={{ item.name }} state={{ item.state|default('installed') }}
      with_items: "{{ homebrew_cask_packages }}"
      register: cask_result
    - name: create directory for cask package information
      file: path=cask_info state=directory
    - name: save cask package information
      shell: brew cask info {{ item }} > cask_info/{{ item }}
      with_items: "{{ cask_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list }}"

    # brew
    - name: install brew packages
      homebrew: >
        name={{ item.name }}
        state={{ item.state | default('latest') }}
        install_options={{
          item.install_options | default() | join(',')
          if item.install_options is not string
          else item.install_options
        }}
      with_items: "{{ homebrew_packages }}"
      register: brew_result
    - name: create directory for brew package information
      file: path=brew_info state=directory
    - name: save brew package information
      shell: brew info {{ item }} > brew_info/{{ item }}
      with_items: "{{ brew_result.results | selectattr('changed') | map(attribute='item') | map(attribute='name') | list }}"

    # mac defaults
    - name:
      command: >
        defaults write {{ item.domain }} {{ item.key }} -{{ item.type }} {{ item.value }}
      with_items: "{{ mac_defaults_settings }}"

    - name:
      command: >
        defaults write -g {{ item.key }} -{{ item.type }} {{ item.value }}
      with_items: "{{ mac_global_domain_defaults_settings }}"
